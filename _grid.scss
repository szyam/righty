// * B A S E   G R I D  *
//
//inspired from http://webdesign.tutsplus.com/tutorials/a-simple-responsive-grid-made-even-better-with-sass--cms-21540

.row {
    margin: 0 auto;
    width: 100%;
    max-width: $container-width;
    @extend %clearfix;
    &.wide {
        max-width: $container-width * 1.25; // change to suit
    }
    &.narrow {
        max-width: $container-width * .75; // change to suit
    }
    .row {
        @media (min-width: $medium) {
            [class*='col-']:first-child {
                margin-left: -$gutter;
            }
        }
    }
}

[class*='columns-'], [class*='col-'] {
    // float: left; // add float back to mobile-first col if experiencing collapsing issues. But, man... it feels nice to just add 'float:left' when it's necessary
    width: 100%;
    min-height: $one;
    padding: $gutter;
    .switch & {
        float: right;
    }
}

@media (min-width: $medium) {
    @for $i from 1 through $grid-columns {      
        .columns-#{$i}, .col-#{$i}, { 
            float: left;        
            width: 100% / $grid-columns * $i;   
        }           
    }   
} // * mq

// * M I X I N S *
// * Apply a clearfix to an element.

@mixin clearfix() {
  *zoom: 1;

  &:before, &:after {
    content: '';
    display: table;
  }

  &:after {
    clear: both;
  }
}

%clearfix {
    *zoom: 1;
    &:before, 
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
}

// * define a row with any size width *
@mixin row($max-width: $container-width, $padded: 0) {
  @include clearfix;
  width: auto;
  max-width: $max-width;
  float: none;
  display: block;
  margin: {
    right: auto;
    left:  auto;
  };
  padding: {
    left:  $padded;
    right: $padded;
  };
}